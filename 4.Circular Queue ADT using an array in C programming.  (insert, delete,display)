#include<stdio.h> 
#define SIZE 5 
int items[SIZE]; 
int front=-1; 
int rear=-1; 
int isFull() 
{ 
 if(front==rear+1||front==0&&rear==SIZE-1) 
 return 1; 
 return 0; 
} 
int isEmpty() 
{ 
 if(front==-1) 
 return 1; 
 return 0; 
} 
void enqueue(int element) 
{ 
 if(isFull()) 
 printf("\n Quue is full"); 
 else 
 { 
 if(front==-1) 
 front=0; 
 rear=(rear+1)%SIZE; 
 items[rear]=element; 
 printf("\n Inserted element-> %d",element); 
 } 
} 
int dequeue() 
{ 
 int element; 
 if(isEmpty()) 
 { 
 printf("\n Queue is empty"); 
 return -1; 
 } 
 else 
 { 
 element=items[front]; 
 if(front==rear) 
 { 
 front=-1; 
 rear=-1; 
 } 
 else 
 { 
 front=(front+1)%SIZE; 
 } 
 printf("\n Deleted element-> %d",element); 
 return(element); 
 } 
} 
void display() 
{ 
 int i; 
 if(isEmpty()) 
 printf("\n Empty Queue"); 
 else 
 { 
 printf("\n Front -> %d",front); 
 printf("\n Items ->"); 
 for(i=front;i!=rear;i=(i+1)%SIZE) 
 { 
 printf("\n %d",items[i]); 
 } 
 printf("\n Rear -> %d",rear); 
 } 
 } 
 int main() 
 { 
 int choice=1,x; 
 while(choice<4&&choice!=0) 
 { 
 printf("\n Press 1:Insert"); 
 printf("\n Press 2:delete"); 
 printf("\n Press 3:Display"); 
 printf("\n Press 4:Exit"); 
 printf("\n Enetr your choice:"); 
 scanf("%d",&choice); 
 switch(choice) 
 { 
 case 1:printf("\n Enter an element to be inserted:"); 
 scanf("%d",&x); 
 enqueue(x); 
 break; 
 case 2:dequeue(); 
 break; 
 case 3:display(); 
 break; 
 case 4:exit(0); 
 break; 
 default:printf("\n ENter a valid choice........"); 
 } 
 } 
 return 0; 
 } 
